<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_prototype_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = floor(random(100));
obstacleHit = false;
speed = 1.5;
isAware = false;
wasAware = false;
detectionRadius = 4;
instance = instance_nearest(x, y, obj_prototype_light);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_prototype_player.free == true){
    if(obstacleHit)
    {
        if(!isAware)
            phy_rotation += 180;
        
        //speed = speed*-1;
        obstacleHit = false;
    }
    
    if(isAware) {
        speed = 1.5;
        detection = 8;
        var inst = instance_find(obj_prototype_player, 0);
        mp_potential_step_object(inst.x, inst.y, 2, obj_prototype_avoidable_obstacle);
        phy_position_x =  x; //lengthdir_x(2,dir);
        phy_position_y =  y;
    } else {
        detection = 4;
    }
    if (wasAware){
        if (instance.variation == 60)
            phy_rotation += 180;
    }
    if(!idle &amp;&amp; !isAware &amp;&amp; !wasAware) {
        phy_position_x += speed * cos(phy_rotation * pi / 180);
        phy_position_y += speed * sin(phy_rotation * pi / 180);
    }
    
    
    //check if player is making sound near enemy
    
    if(collision_circle(phy_position_x, phy_position_y, sprite_width*detection, obj_prototype_player, false, false)) {
        idle = false;        
        var checkWall = collision_line(phy_position_x, phy_position_y, obj_prototype_player.x, obj_prototype_player.y, obj_prototype_wall, false, false); 
        
        if(!checkWall &amp;&amp; !obj_prototype_player.isHiding &amp;&amp; !obj_prototype_player.isStealthing &amp;&amp; !checkWall) {
            isAware = true;
            wasAware = false;
            phy_rotation = -point_direction(x, y, obj_prototype_player.x, obj_prototype_player.y);
            //phy_rotation = arctan(phy_position_y - obj_prototype_player.phy_position_y/phy_position_x - obj_prototype_player.phy_position_x);
        }
    else if (collision_circle(phy_position_x, phy_position_y, sprite_width, obj_prototype_player, false, false)){
            isAware = true;
            wasAware = false;
            phy_rotation = -point_direction(x, y, obj_prototype_player.x, obj_prototype_player.y);
    }
    
    } else {
        if(isAware){
            isAware = false;
            wasAware = true;
        }
        if(speed == 1)
            phy_rotation = 0;
    }
    if(onFire &amp;&amp; !isAware)
    {/*
        mp_potential_step_object(96 + 100 * instance_number(self), 416, 2, obj_prototype_obstacles);
        phy_position_x =  x; //lengthdir_x(2,dir);
        phy_position_y =  y;
    */
        //go check the fire
        if (phy_position_y &lt; 200)
        {
            target_dir = point_direction(phy_position_x, phy_position_y, 1920, 200);
            ldx = lengthdir_x(1.0, target_dir);
            ldy = lengthdir_y(1.0, target_dir);
            phy_position_x += ldx - sin(target_dir);
            phy_position_y += ldy - cos(target_dir);
        }
        
        else if(phy_position_y &lt; 300)
            phy_position_y += speed;        
        else if (phy_position_x &gt; 240)
        {
            phy_position_x -= speed;
            phy_rotation = 180;
        }
        else if (phy_position_y &lt; 430)            
            phy_position_y += speed;
        else
        {
            phy_rotation = 90;
            speed = 0;
        }
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_prototype_obstacles">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obstacleHit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_prototype_hiding_obstacle">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obstacleHit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_infirmary_door_left">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(isAware) {
    index = instance_nearest(phy_position_x, phy_position_y, obj_infirmary_door_left);
    index.open = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_infirmary_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(isAware) {
    index = instance_nearest(phy_position_x, phy_position_y, obj_infirmary_door_left);
    index.open = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
